const express = require('express');
const cors = require('cors');
const app = express();

app.use(cors());
app.use(express.json());

// Route santÃ©
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    message: 'FreeSol Backend Pro',
    version: '1.0.0',
    timestamp: new Date().toISOString()
  });
});

// Scan des tokens (version simplifiÃ©e pour l'instant)
app.post('/api/tokens/scan', async (req, res) => {
  try {
    const { walletAddress } = req.body;
    
    if (!walletAddress) {
      return res.status(400).json({ error: 'Adresse wallet requise' });
    }

    // Pour l'instant on retourne un tableau vide
    // Mais le backend est prÃªt pour les vraies donnÃ©es
    const mockTokens = [
      {
        account: 'mock_account_1',
        recoverable: 0.005432,
        mint: 'TOKEN1...',
        type: 'TOKEN_ACCOUNT_RENT'
      }
    ];

    res.json({
      success: true,
      data: mockTokens,
      cached: false,
      timestamp: new Date().toISOString(),
      message: 'Backend Pro - PrÃªt pour les scans rÃ©els'
    });

  } catch (error) {
    res.status(500).json({ 
      success: false, 
      error: 'Erreur temporaire' 
    });
  }
});

// VÃ©rification de transaction
app.post('/api/transactions/verify', async (req, res) => {
  try {
    const { signature, expectedAmount } = req.body;
    
    res.json({
      success: true,
      verified: true,
      signature: signature,
      message: 'Transaction vÃ©rifiÃ©e par FreeSol Pro',
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    res.status(500).json({ error: 'Erreur de vÃ©rification' });
  }
});

// Statistiques
app.get('/api/stats', (req, res) => {
  res.json({
    success: true,
    data: {
      totalUsers: 0,
      totalSOL: 0,
      totalTokens: 0,
      online: true,
      timestamp: new Date().toISOString()
    }
  });
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`ðŸš€ FreeSol Backend PRO running on port ${PORT}`);
  console.log(`ðŸ“Š Health: http://localhost:${PORT}/health`);
});
